panel.grid.minor = element_line(NA),
axis.text  = element_text(size=rel(0.9), colour = "grey40"),
#          axis.title  = element_text(size=rel(1.0)),
axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm"),
size=rel(1.25), colour = "grey30"),
axis.title.y = element_text(margin = unit(c(0, 3, 0, 0), "mm"),
size=rel(1.25), angle = 90, colour= "grey30"),
strip.text = element_text(size = rel(1.25), colour = "black", face = "bold"), #face = "normal"
strip.background = element_blank(),
plot.margin=unit(c(10,10,10,10),"pt"),
panel.spacing = unit(25,"pt")
)
}
library(lemon)
droplevels(ts.counts.sum$lim)
levels(ts.counts.sum$lim) <- c("","N-limited","P-limited")
p <- ggplot(data = ts.counts.sum %>%
filter(trt == "Infect", day >= -6),
aes(x = day, y = mean, ymin = mean-sem, ymax = mean+sem,
shape = microbe, col = microbe)) +
geom_vline(xintercept = 0, size = 0.25) +
geom_errorbar(col = "black", width = 0)+
geom_line(col = "black") + geom_point() + facet_grid(~lim) +
scale_shape_manual(values = c(15,19), name = "") +
geom_point(data = ts.counts.sum %>%
filter(trt == "Infect", microbe =="Syn", day >= -6),
aes(x = day, y = mean), size = 2, col= "black") +
geom_point(data = ts.counts.sum %>%
filter(trt == "Infect", microbe =="Syn", day >= -6),
aes(x = day, y = mean), size = 1.5, col= "white") +
scale_color_manual(values = c("black","white"), name = "")+
scale_y_log10(breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x))) +
labs(x = "Time (d)", y = expression(Abundance~(mL^-1))) +
theme_std() +
annotation_logticks(sides = "lr")
reposition_legend(p, panel = "panel-2-1",'bottom right')
p <- ggplot(data = ts.counts.sum %>%
filter(trt == "Control", day >= -6),
aes(x = day, y = mean, ymin = min, ymax = max)) +
geom_vline(xintercept = 0, size = 0.25) +
geom_errorbar(col = "black", width = 0)+
geom_line(col = "grey70") + geom_point() + facet_grid(~lim) +
scale_shape_manual(values = c(15,19)) +
scale_color_manual(values = c("black","white"))+
scale_y_log10(breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x))) +
labs(x = "Time (d)", y = expression(Abundance~(mL^-1))) +
theme_std() +
annotation_logticks(sides = "lr")
reposition_legend(p, panel = "panel-2-1",'bottom right')
p <- ggplot(data = ts.counts.sum %>%
filter(trt == "Control", day >= -6),
aes(x = day, y = mean, ymin = min, ymax = max)) +
geom_vline(xintercept = 0, size = 0.25) +
geom_errorbar(col = "black", width = 0)+
geom_line(col = "grey70") + geom_point() + facet_grid(~lim) +
scale_shape_manual(values = c(15,19)) +
scale_color_manual(values = c("black","white"))+
scale_y_log10(breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x))) +
labs(x = "Time (d)", y = expression(Abundance~(mL^-1))) +
theme_std() +
annotation_logticks(sides = "lr")
reposition_legend(p, panel = "panel-2-1",'bottom right')
ggplot(data = ts.counts.sum %>%
filter(trt == "Control", day >= -6),
aes(x = day, y = mean, ymin = min, ymax = max)) +
geom_vline(xintercept = 0, size = 0.25)
ggplot(data = ts.counts.sum %>%
filter(trt == "Control", day >= -6),
aes(x = day, y = mean, ymin = min, ymax = max)) +
geom_vline(xintercept = 0, size = 0.25) +
geom_errorbar(col = "black", width = 0)+
geom_line(col = "grey70")
ggplot(data = ts.counts.sum %>%
filter(trt == "Control", day >= -6),
aes(x = day, y = mean, ymin = min, ymax = max)) +
geom_vline(xintercept = 0, size = 0.25) +
geom_errorbar(col = "black", width = 0)+
geom_line(col = "grey70") + geom_point() + facet_grid(~lim)
ggplot(data = ts.counts.sum %>%
filter(trt == "Control", day >= -6),
aes(x = day, y = mean, ymin = min, ymax = max)) +
geom_vline(xintercept = 0, size = 0.25) +
geom_errorbar(col = "black", width = 0)+
geom_line(col = "grey70") + geom_point() + facet_grid(~lim) +
#scale_shape_manual(values = c(15,19)) +
scale_color_manual(values = c("black","white"))+
scale_y_log10(breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x))) +
labs(x = "Time (d)", y = expression(Abundance~(mL^-1))) +
theme_std() +
annotation_logticks(sides = "lr")
reposition_legend(p, panel = "panel-2-1",'bottom right')
head(ts.counts.sum)
ccf.dataset <- ts.counts.sum %>%
filter(day >= 0, trt == "Infect") %>%
select(day, lim, microbe, mean)
ccf.dataset <- ts.counts.sum %>%
filter(day >= 0, trt == "Infect") %>%
select(day, lim, microbe, mean) %>%
ungroup()
head(ccf.dataset)
ccf.dataset <- ts.counts.sum %>%
filter(day > 0, day<= 149, trt == "Infect") %>%
select(day, lim, microbe, mean) %>%
ungroup()
str(ts.counts.sum)
ts.counts.sum2 <- as.data.frame(ts.counts.sum)
ccf.dataset <- ts.counts.sum2 %>%
filter(day > 0, day<= 149, trt == "Infect") %>%
select(day, lim, microbe, mean) %>%
ungroup()
head(ccf.dataset)
lin.interp <- approx(ccf.dataset$day, ccf.dataset$mean, method = "linear", n = nrow(ccf.dataset))
lin.interp
ccf.dataset.N <- ts.counts.sum2 %>%
filter(day > 0, day<= 149, lim = "N-limited", trt == "Infect") %>%
select(day, lim, microbe, mean) %>%
ungroup()
ccf.dataset.N <- ts.counts.sum2 %>%
filter(day > 0, day<= 149, lim == "N-limited", trt == "Infect") %>%
select(day, lim, microbe, mean) %>%
ungroup()
?approx
lin.interp <- approx(ccf.dataset.N$day, ccf.dataset.N$mean,
method = "linear", n = 149)
lin.interp
lin.interp <- approx(ccf.dataset.N$day, ccf.dataset.N$mean,
method = "linear")
lin.interp
str(ccf.dataset.N)
lin.interp <- approx(ccf.dataset.N$day, ccf.dataset.N$mean,
method = "linear", n = 50)
lin.interp
lin.interp <- approx(ccf.dataset.N$day, ccf.dataset.N$mean,
method = "linear", n = 100)
lin.interp
lin.interp <- approx(ccf.dataset.N$day, ccf.dataset.N$mean,
method = "linear", n = 50)
lin.interp <- do.call(cbind.data.frame, lin.interp)
names(lin.interp) <- c("time","value")
str(ccf.dataset.N)
ccf.dataset.N.syn <- ts.counts.sum2 %>%
filter(day > 0, day<= 149,
lim == "N-limited", trt == "Infect", microbe == "Syn") %>%
select(day, mean) %>%
ungroup()
lin.interp <- approx(ccf.dataset.N.syn$day, ccf.dataset.N.syn$mean,
method = "linear", n = 50)
lin.interp <- do.call(cbind.data.frame, lin.interp)
names(lin.interp) <- c("time","value")
ggplot() + geom_line(lin.interp, aes(x = time, y = value)) +
geom_point(ccf.dataset.N, aes(x = day, y =mean))
ggplot() + geom_line(data = lin.interp, aes(x = time, y = value)) +
geom_point(data = ccf.dataset.N.syn, aes(x = day, y =mean))
?smk.test
head(ts.counts.sum)
ccf.dataset.N.phage <- ts.counts.sum2 %>%
filter(day > 0, day<= 149,
lim == "N-limited", trt == "Infect", microbe == "Phage") %>%
select(day, mean) %>%
ungroup()
lin.interp <- approx(ccf.dataset.N.syn$day, ccf.dataset.N.syn$mean,
method = "linear", n = 50)
lin.interp <- do.call(cbind.data.frame, lin.interp)
names(lin.interp) <- c("time","value")
ggplot() + geom_line(data = lin.interp, aes(x = time, y = value)) +
geom_point(data = ccf.dataset.N.syn, aes(x = day, y =mean))
ccf.dataset.N.phage <- ts.counts.sum2 %>%
filter(day > 0, day<= 149,
lim == "N-limited", trt == "Infect", microbe == "Phage") %>%
select(day, mean) %>%
ungroup()
lin.interp.phage <- approx(ccf.dataset.N.phage$day, ccf.dataset.N.phage$mean,
method = "linear", n = 50)
lin.interp.phage <- do.call(cbind.data.frame, lin.interp)
names(lin.interp.phage) <- c("time","value")
ggplot() +
geom_line(data = lin.interp, aes(x = time, y = value)) +
geom_point(data = ccf.dataset.N.syn, aes(x = day, y =mean)) +
geom_line(data = lin.interp, aes(x = time, y = value)) +
geom_point(data = ccf.dataset.N.syn, aes(x = day, y =mean))
ggplot() +
geom_line(data = lin.interp, aes(x = time, y = value)) +
geom_point(data = ccf.dataset.N.syn, aes(x = day, y =mean)) +
geom_line(data = lin.interp.phage, aes(x = time, y = value)) +
geom_point(data = ccf.dataset.N.phage, aes(x = day, y =mean))
lin.interp.phage <- approx(ccf.dataset.N.phage$day, ccf.dataset.N.phage$mean,
method = "linear", n = 50)
lin.interp.phage <- do.call(cbind.data.frame, lin.interp.phage)
names(lin.interp.phage) <- c("time","value")
ggplot() +
geom_line(data = lin.interp, aes(x = time, y = value)) +
geom_point(data = ccf.dataset.N.syn, aes(x = day, y =mean)) +
geom_line(data = lin.interp.phage, aes(x = time, y = value)) +
geom_point(data = ccf.dataset.N.phage, aes(x = day, y =mean))
ggplot() +
geom_line(data = lin.interp, aes(x = time, y = value)) +
geom_point(data = ccf.dataset.N.syn, aes(x = day, y =mean)) +
geom_line(data = lin.interp.phage, aes(x = time, y = value)) +
geom_point(data = ccf.dataset.N.phage, aes(x = day, y =mean)) +
scale_y_log10()
lin.interp.phage <- approx(ccf.dataset.N.phage$day, log10(ccf.dataset.N.phage$mean),
method = "linear", n = 50)
lin.interp.phage <- do.call(cbind.data.frame, lin.interp.phage)
names(lin.interp.phage) <- c("time","value")
ggplot() +
geom_line(data = lin.interp, aes(x = time, y = value)) +
geom_point(data = ccf.dataset.N.syn, aes(x = day, y =mean)) +
geom_line(data = lin.interp.phage, aes(x = time, y = value)) +
geom_point(data = ccf.dataset.N.phage, aes(x = day, y =mean))
lin.interp.phage <- approx(ccf.dataset.N.phage$day, ccf.dataset.N.phage$mean,
method = "linear", n = 50)
lin.interp.phage <- do.call(cbind.data.frame, lin.interp.phage)
names(lin.interp.phage) <- c("time","value")
ggplot() +
geom_line(data = lin.interp, aes(x = time, y = value)) +
geom_point(data = ccf.dataset.N.syn, aes(x = day, y =mean)) +
geom_line(data = lin.interp.phage, aes(x = time, y = value)) +
geom_point(data = ccf.dataset.N.phage, aes(x = day, y =mean)) +
scale_y_log10()
ccf.dataset.N.syn <- ts.counts.sum2 %>%
filter(day > 0, day<= 149,
lim == "N-limited", trt == "Infect", microbe == "Syn") %>%
select(day, mean) %>%
ungroup() %>%
mutate(mean = log10(mean))
# test for stationarity
adf.test(ccf.dataset.N.syn)
library(tseries)
# test for stationarity
adf.test(ccf.dataset.N.syn)
head(ccf.dataset.N.syn)
str(ccf.dataset.N.syn)
# test for stationarity
adf.test(ccf.dataset.N.syn$mean)
ccf.dataset <- ts.counts.sum2 %>%
filter(day > 0, day<= 149,trt == "Infect") %>%
select(day, lim, microbe, mean) %>%
ungroup() %>%
mutate(mean = log10(mean))
# test for stationarity
adf.test(ccf.dataset$mean %>% filter(lim == "N-limited", microbe == "Syn")) # p >0.05 = non-stationarity
# test for stationarity
adf.test(ccf.dataset %>% filter(lim == "N-limited", microbe == "Syn") %>% select(mean)) # p >0.05 = non-stationarity
ccf.dataset %>% filter(lim == "N-limited", microbe == "Syn") %>% select(mean)
str(ccf.dataset %>% filter(lim == "N-limited", microbe == "Syn") %>% select(mean))
# test for stationarity
adf.test(ccf.dataset %>% filter(lim == "N-limited", microbe == "Syn") %>% select(mean)) # p >0.05 = non-stationarity
ccf.dataset.P.syn <- ts.counts.sum2 %>%
filter(day > 0, day<= 149,
lim == "P-limited", trt == "Infect", microbe == "Syn") %>%
select(day, mean) %>%
ungroup() %>%
mutate(mean = log10(mean))
ccf.dataset.P.phage <- ts.counts.sum2 %>%
filter(day > 0, day<= 149,
lim == "P-limited", trt == "Infect", microbe == "Phage") %>%
select(day, mean) %>%
ungroup() %>%
mutate(mean = log10(mean))
adf.test(ccf.dataset.N.phage$mean) # p >0.05 = non-stationarity
adf.test(ccf.dataset.P.syn$mean) # p >0.05 = non-stationarity
adf.test(ccf.dataset.P.phage$mean) # p >0.05 = non-stationarity
diff.syn.N =diff(ccf.dataset.N.syn$mean, 1)
acf(diff.syn.N)
adf.test(diff.syn.N)
diff.phage.N =diff(ccf.dataset.N.phage$mean, 1)
acf(diff.phage.N)
adf.test(diff.phage.N)
ccf(diff.syn.N, diff.phage.N)
ccf.N <- ccf(diff.syn.N, diff.phage.N)
ccf.N
?ccf
ccf.N <- ccf(diff.syn.N, diff.phage.N, type = "correlation")
ccf.N
# test lags
alldata=ts.intersect(ccf.dataset.N.syn,synlag1=lag(ccf.dataset.N.syn,1),
ccf.dataset.N.syn,synlag2=lag(ccf.dataset.N.syn,2),
ccf.dataset.N.syn,synlag3=lag(ccf.dataset.N.syn,3),
ccf.dataset.N.syn,synlag4=lag(ccf.dataset.N.syn,4))
ccf.N <- ccf(ccf.dataset.N.syn$mean, ccf.dataset.N.phage$mean, type = "correlation")
ccf.N
ccf.N <- ccf(diff.syn.N, diff.phage.N, type = "correlation")
ccf.N
# test lags
ccf.dataset.N.syn.ts <- ts(ccf.dataset.N.syn)
ccf.dataset.N.phage.ts <- ts(ccf.dataset.N.phage)
alldata=ts.intersect(ccf.dataset.N.syn,synlag1=lag(ccf.dataset.N.syn,1),
ccf.dataset.N.syn,synlag2=lag(ccf.dataset.N.syn,2),
ccf.dataset.N.syn,synlag3=lag(ccf.dataset.N.syn,3),
ccf.dataset.N.syn,synlag4=lag(ccf.dataset.N.syn,4))
alldata=ts.intersect(ccf.dataset.N.syn.ts,synlag1=lag(ccf.dataset.N.syn,1),
ccf.dataset.N.syn.ts,synlag2=lag(ccf.dataset.N.syn,2),
ccf.dataset.N.syn.ts,synlag3=lag(ccf.dataset.N.syn,3),
ccf.dataset.N.syn.ts,synlag4=lag(ccf.dataset.N.syn,4))
tryit = lm(ccf.dataset.N.phage.ts$mean~synlag1+synlag2+synlag3+synlag4, data = alldata)
ccf.dataset.N.phage.ts
ccf.dataset.N.syn <- ts.counts.sum2 %>%
filter(day > 0, day<= 149,
lim == "N-limited", trt == "Infect", microbe == "Syn") %>%
select(day, mean) %>%
ungroup() %>%
mutate(mean = log10(mean))
ccf.dataset.N.phage <- ts.counts.sum2 %>%
filter(day > 0, day<= 149,
lim == "N-limited", trt == "Infect", microbe == "Phage") %>%
select(day, mean) %>%
ungroup() %>%
mutate(mean = log10(mean))
ccf.dataset.P.syn <- ts.counts.sum2 %>%
filter(day > 0, day<= 149,
lim == "P-limited", trt == "Infect", microbe == "Syn") %>%
select(day, mean) %>%
ungroup() %>%
mutate(mean = log10(mean))
ccf.dataset.P.phage <- ts.counts.sum2 %>%
filter(day > 0, day<= 149,
lim == "P-limited", trt == "Infect", microbe == "Phage") %>%
select(day, mean) %>%
ungroup() %>%
mutate(mean = log10(mean))
# test lags
ccf.dataset.N.syn.ts <- ts(ccf.dataset.N.syn, start = 2, end = 149)
ccf.dataset.N.phage.ts <- ts(ccf.dataset.N.phage, start = 2, end = 149)
alldata=ts.intersect(ccf.dataset.N.syn.ts,synlag1=lag(ccf.dataset.N.syn,1),
ccf.dataset.N.syn.ts,synlag2=lag(ccf.dataset.N.syn,2),
ccf.dataset.N.syn.ts,synlag3=lag(ccf.dataset.N.syn,3),
ccf.dataset.N.syn.ts,synlag4=lag(ccf.dataset.N.syn,4))
ccf.dataset.N.syn.ts
?ts
install.packages("pastecs")
# convert irregular time series to regular time series
library(pastecs)
head(ts.counts.sum)
head(ts.counts.mod)
head(ts.counts.mod2)
head(ts.counts.sum2)
ccf.dataset.log <- ts.counts.sum2 %>%
filter(day > 0, day<= 149, trt == "Infect") %>%
select(lim, microbe, day, mean) %>%
ungroup() %>%
mutate(mean = log10(mean)) %>%
spread(lim, microbe, mean)
ccf.dataset.N.log <- ts.counts.sum2 %>%
filter(day > 0, day<= 149, trt == "Infect", lim == "N-limited") %>%
select(microbe, day, mean) %>%
ungroup() %>%
mutate(mean = log10(mean)) %>%
spread(microbe, mean)
length(ccf.dataset.N.log$day)
intervals.N <- ccf.dataset.N.log$day[2:59] - ccf.dataset.N.log$day[1:58]
intervals.N
range(intervals.N); mean(intervals.N)
# range is variable - need to be regulated to be converted to ts
ts.n.reg <- regul(ccf.dataset.N.log$day, ccf.dataset.N.log[2:3], xmin = 2, deltat = 2)
ts.n.reg
head(ccf.dataset.N.log)
ts.n.reg <- regul(ccf.dataset.N.log$day, ccf.dataset.N.log[2:3], xmin = 2, deltat = 2,
methods = c("l","l"))
ts.n.reg
plot(ts.n.reg,5)
plot(ts.n.reg)
plot(ts.n.reg,2)
149/2
# range is variable - need to be regulated to be converted to ts
ts.n.reg <- regul(ccf.dataset.N.log$day, ccf.dataset.N.log[2:3], xmin = 2, deltat = 2,
methods = c("l","l"), n = 75)
plot(ts.n.reg,2)
plot(ts.n.reg,1)
specs(ts.n.reg)
syn.n.ts <- is.tseries(extract(ts.n.reg, series = "Syn"))
phage.n.ts <- is.tseries(extract(ts.n.reg, series = "Phage"))
head(syn.n.ts)
head(phage.n.ts)
syn.n.ts <- extract(ts.n.reg, series = "Syn")
phage.n.ts <- extract(ts.n.reg, series = "Phage")
head(phage.n.ts)
ccf.n <- ccf(syn.n.ts,phage.n.ts)
ccf.n <- ccf(syn.n.ts,phage.n.ts, type = "correlation")
syn.n.ts,phage
syn.n.ts
phage.n.ts
# range is variable - need to be regulated to be converted to ts
ts.n.reg <- regul(ccf.dataset.N.log$day, ccf.dataset.N.log[2:3], xmin = 2, deltat = 2,
methods = c("l","l"), n = 74)
plot(ts.n.reg,1)
specs(ts.n.reg)
syn.n.ts <- extract(ts.n.reg, series = "Syn")
phage.n.ts <- extract(ts.n.reg, series = "Phage")
ccf.n <- ccf(syn.n.ts,phage.n.ts, type = "correlation")
adf.test(syn.n.ts)
diff.syn.n.ts <- diff(syn.n.ts)
adf.test(syn.n.ts)
adf.test(diff.syn.n.ts)
adf.test(phage.n.ts)
diff.phage.n.ts <- diff(phage.n.ts)
adf.test(diff.phage.n.ts)
ccf.n <- ccf(diff.syn.n.ts,diff.phage.n.ts, type = "correlation")
alldata=ts.intersect(diff.syn.n.ts,synlag1=lag(diff.syn.n.ts,1),
diff.syn.n.ts,synlag2=lag(diff.syn.n.ts,2),
diff.syn.n.ts,synlag3=lag(diff.syn.n.ts,3),
diff.syn.n.ts,synlag4=lag(diff.syn.n.ts,4))
alldata=ts.intersect(diff.syn.n.ts,synlag1=stats::lag(diff.syn.n.ts,1),
diff.syn.n.ts,synlag2=stats::lag(diff.syn.n.ts,2),
diff.syn.n.ts,synlag3=stats::lag(diff.syn.n.ts,3),
diff.syn.n.ts,synlag4=stats::lag(diff.syn.n.ts,4))
tryit = lm(diff.phage.n.ts~synlag1+synlag2+synlag3+synlag4, data = alldata)
alldata
library(astsa)
alldata=ts.intersect(diff.syn.n.ts,synlag1=astsa::lag(diff.syn.n.ts,1),
diff.syn.n.ts,synlag2=astsa::lag(diff.syn.n.ts,2),
diff.syn.n.ts,synlag3=astsa::lag(diff.syn.n.ts,3),
diff.syn.n.ts,synlag4=astsa::lag(diff.syn.n.ts,4))
alldata=ts.intersect(diff.syn.n.ts,synlag1=stats::lag(diff.syn.n.ts,-1),
diff.syn.n.ts,synlag2=stats::lag(diff.syn.n.ts,-2))
tryit = lm(diff.phage.n.ts~synlag1+synlag2+synlag3+synlag4, data = alldata)
tryit = lm(diff.phage.n.ts~synlag1+synlag2, data = alldata)
synlag1
alldata
length(alldata$synlag1)
str(alldata)
alldata <- as.data.frame(alldata)
str(alldata)
tryit = lm(diff.phage.n.ts~synlag1+synlag2, data = alldata)
length(alldata$synlag1)
length(diff.phage.n.ts)
length(alldata$synlag2)
length(diff.syn.n.ts)
tryit = lm(diff.phage.n.ts[-2]~synlag1+synlag2, data = alldata)
tryit = lm(diff.phage.n.ts[-1:2]~synlag1+synlag2, data = alldata)
tryit = lm(diff.phage.n.ts[-c(1:2)]~synlag1+synlag2, data = alldata)
summary (tryit)
alldata=ts.intersect(diff.syn.n.ts,synlag1=stats::lag(diff.syn.n.ts,1),
diff.syn.n.ts,synlag2=stats::lag(diff.syn.n.ts,2))
alldata <- as.data.frame(alldata)
tryit = lm(diff.phage.n.ts[-c(1:2)]~synlag1+synlag2, data = alldata)
summary (tryit)
alldata=ts.intersect(diff.syn.n.ts,synlag1=stats::lag(diff.syn.n.ts,2),
diff.syn.n.ts,synlag2=stats::lag(diff.syn.n.ts,4))
alldata <- as.data.frame(alldata)
tryit = lm(diff.phage.n.ts[-c(1:2)]~synlag1+synlag2, data = alldata)
length(alldata$synlag2)
head(alldata)
head(diff.syn.n.ts)
?lag
alldata
alldata=ts.intersect(diff.syn.n.ts,synlag1=stats::lag(diff.syn.n.ts,2),
diff.syn.n.ts,synlag2=stats::lag(diff.syn.n.ts,4))
str(alldata)
head(diff.phage.n.ts)
head(phage.n.ts)
head(ts.n.reg)
nrow(alldata)
73-69
tryit = lm(diff.phage.n.ts[-c(1,63:65)]~synlag1+synlag2, data = alldata)
summary (tryit)
alldata=ts.intersect(diff.syn.n.ts,synlag1=stats::lag(diff.syn.n.ts,2),
diff.syn.n.ts,synlag2=stats::lag(diff.syn.n.ts,4))
str(alldata)
head(ts.n.reg)
head(ts.n.reg$x)
tail(ts.n.reg$x)
ts.n.reg[2:62]
ts.n.reg$x[2:62]
ts.n.reg$x[2:65]
ts.n.reg$x[2:68]
ts.n.reg$x[2:69]
ts.n.reg$x[2:70]
tryit = lm(diff.phage.n.ts[2:70]~synlag1+synlag2, data = alldata)
summary (tryit)
alldata=ts.intersect(diff.syn.n.ts,synlag2=stats::lag(diff.syn.n.ts,2),
diff.syn.n.ts,synlag4=stats::lag(diff.syn.n.ts,4),
diff.syn.n.ts,synlag6=stats::lag(diff.syn.n.ts,6))
str(alldata) #ts from 4 to 140
ts.n.reg$x[2:70]
ts.n.reg$x[2:68]
tryit = lm(diff.phage.n.ts[2:68]~synlag2+synlag4 +synlag6, data = alldata)
summary (tryit)
acf2(residuals(tryit))
ccf.n <- ccf(diff.syn.n.ts,diff.phage.n.ts, type = "correlation")
ccf.n <- ccf(diff.syn.n.ts,diff.phage.n.ts, type = "correlation", title ="N-limited")
ccf.n <- ccf(diff.syn.n.ts,diff.phage.n.ts, type = "correlation", main ="N-limited")
ccf.dataset.P.log <- ts.counts.sum2 %>%
filter(day > 0, day<= 149, trt == "Infect", lim == "P-limited") %>%
select(microbe, day, mean) %>%
ungroup() %>%
mutate(mean = log10(mean)) %>%
spread(microbe, mean)
length(ccf.dataset.P.log$day)
length(ccf.dataset.N.log$day)
intervals.P <- ccf.dataset.P.log$day[2:59] - ccf.dataset.P.log$day[1:58]
range(intervals.P); mean(intervals.P)
intervals.P
# range is variable - need to be regulated to be converted to ts
ts.p.reg <- regul(ccf.dataset.P.log$day, ccf.dataset.P.log[2:3], xmin = 2, deltat = 2,
methods = c("l","l"), n = 74)
plot(ts.p.reg,1)
specs(ts.p.reg)
plot(ts.p.reg,2)
syn.p.ts <- extract(ts.p.reg, series = "Syn")
phage.p.ts <- extract(ts.p.reg, series = "Phage")
adf.test(syn.p.ts)
diff.syn.n.ts <- diff(syn.p.ts)
diff.syn.p.ts <- diff(syn.p.ts)
adf.test(diff.syn.p.ts)
adf.test(phage.p.ts)
diff.phage.p.ts <- diff(phage.p.ts)
adf.test(diff.phage.p.ts)
ccf.p <- ccf(diff.syn.p.ts,diff.phage.p.ts, type = "correlation", main ="P-limited")
